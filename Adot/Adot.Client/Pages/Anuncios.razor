@page "/anuncios"
@rendermode InteractiveServer

<div class="container-fluid">
    <div class="row justify-content-center mb-5 mt-3">
        <div class="col-lg-10">
            <div class="card mb-3">
                <div class="card-header">
                    <button class="btn btn-primary float-end" @onclick="NavigateToAddAnuncioPage">
                        Novo Anúncio
                    </button>
                </div>
                <div class="card-body text-center">
                    <h5 class="card-title">Adicionar novo anúncio</h5>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        @if (AnunciosList.Count > 0)
        {
            @foreach (var anuncio in AnunciosList)
            {
                <div class="col-12 mb-3">
                    <div class="card">
                        <div class="row g-0 align-items-center">
                            <div class="col-md-2">
                                <img src="@anuncio.Imagem" class="img-fluid rounded-start" alt="Imagem do anúncio">
                            </div>
                            <div class="col-md-10">
                                <div class="card-body d-flex justify-content-between align-items-center">
                                    <div>
                                        <h5 class="card-title">@anuncio.Titulo</h5>
                                        <p class="card-text">@anuncio.Descricao</p>
                                    </div>
                                    <div class="d-flex gap-2">
                                        <button class="btn btn-outline-info" @onclick="() => Edit(anuncio)">Editar</button>
                                        <button class="btn btn-outline-danger" @onclick="() => Delete(anuncio.Id)">Deletar</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12">
                <div class="alert alert-info text-center">Nenhum anúncio encontrado</div>
            </div>
        }
    </div>
</div>

@code {
    private List<Anuncio> AnunciosList { get; set; } = new();

    private async Task CarregaAnuncios()
    {
        var anuncios = await _anuncioService.GetAllAnunciosAsync();

        AnunciosList?.Clear();

        if (AnunciosList is null) return;

        foreach (var anuncio in anuncios)
            AnunciosList.Add(anuncio);
    }

    protected override async Task OnInitializedAsync()
    {
        await CarregaAnuncios();
    }

    private void NavigateToAddAnuncioPage()
    {
        _navigation.NavigateTo("manutencaoanuncio");
    }

    private void Edit(Anuncio model)
    {
        _navigation.NavigateTo($"manutencaoanuncio/{model.Id}");
    }

    private async Task Delete(int id)
    {
        var anuncio = await _anuncioService.DeleteAnuncioAsync(id);
        await CarregaAnuncios();
    }
}
